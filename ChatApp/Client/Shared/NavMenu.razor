@using ChatApp.Client.Services
@inject NavigationManager navigationManager
@inject StateService State
@inject IMatDialogService MatDialogService
@inject HttpClient Http

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Chat App</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column" id="nav-menu">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Join Room
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="chat-room">
                <span class="oi oi-chat" aria-hidden="true"></span> Chat
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="login">
                <span class="oi oi-account-login" aria-hidden="true"></span> Log In
            </NavLink>
        </li>
        @if (State.logged)
        {
            <li class="nav-item px-3" style="cursor: pointer;">
                <NavLink class="nav-link" @onclick="LogOut">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Log Out
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task LogOut()
    {
        State.timer.Enabled = false;
        State.timer.Close();
        State.updateTimer.Enabled = false;
        State.updateTimer.Close();
        await Http.PutAsJsonAsync<bool>($"Accounts/connection/{State.username}", false);
        State.logged = false;
        State.username = string.Empty;
        State.roomid = string.Empty;
        State.timerInit = false;
        navigationManager.NavigateTo("/login");
    }
}
